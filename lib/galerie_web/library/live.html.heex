<div class="flex flex-row overflow-y-hidden w-full">
  <div class="flex-initial w-72 flex flex-col justify-between">
    <div class="flex-1 overflow-y-auto">
      <div class="px-1">
        <div class="pl-1 flex flex-row justify-between items-center text-true-gray-700">
          <span><%= gettext("Albums") %></span>
          <span class="mr-2 hover:text-pink-600 cursor-pointer" phx-click="create-album"><Icon.add width="14" height="14" /></span>
        </div>
        <ul class="px-1">
          <Ui.list items={@albums}>
            <:item :let={{index, item}}>
              <li phx-click="filter:album" phx-value-index={index} class={Html.class("flex flex-row items-center justify-between px-1 border border-true-gray-300 border-t-0 first:border-t py-0.5 cursor-pointer first:rounded-t-md last:rounded-b-md", {SelectableList.index_selected?(@albums, index), "bg-pink-500 text-white border-pink-500"})}>
                <div class="flex items-center">
                  <Icon.picture width="18" height="18" class="mx-1"/>
                  <%= item.name %>
                </div>
                <div class="w-5 h-5 text-sm text-center rounded-full bg-true-gray-400 text-true-gray-100">
                  <%= item.picture_count %>
                </div>
              </li>
            </:item>
            <:empty>
              <div class="bg-true-gray-200 text-true-gray-500 rounded-lg p-2 text-center"><%= gettext("No albums") %></div>
            </:empty>
          </Ui.list>
        </ul>
      </div>
      <.live_component module={Picture.Filter} id={@picture_filter_id} current_user={@current_user} />
    </div>
    <div class="flex flex-col flex-initial text-xs">
      <%= for {job, count} <- @jobs, count > 0 do %>
        <div class="flex justify-between py-1 px-1">
          <span><%= GalerieWeb.Gettext.Jobs.translate_job_state(job) %></span>
          <span><%= count %></span>
        </div>
      <% end %>
    </div>
  </div>
  <Ui.loading loading={@updating}>
    <div class="w-full flex flex-col">
      <Picture.selection_bar selectable_list={@pictures.results}>
        <Picture.selection_button action="selection_bar:clear" class="rounded-full w-8">
          <Icon.cross class="m-auto" width="12" height="12" />
        </Picture.selection_button>
        <Picture.selection_button action="selection_bar:filter-selected" class="rounded-full w-8">
          <Icon.eye class="m-auto" width="15" height="15" />
        </Picture.selection_button>
        <Picture.selection_button action="selection_bar:download" class="rounded-full w-8">
          <Icon.download class="m-auto" width="15" height="15" />
        </Picture.selection_button>
        <Picture.selection_button action="selection_bar:add-to-album" class="rounded-full w-8">
          <Icon.picture class="m-auto" width="15" height="15" />
        </Picture.selection_button>
      </Picture.selection_bar>
      <Dropzone.render upload={@uploads.upload_pictures} class="overflow-y-hidden flex-1 h-full" id="libraryDropzone">
        <div class="flex-1 h-full overflow-y-auto pr-2" id="library" phx-viewport-bottom={if @pictures.has_next_page and not @scroll_disabled, do: "scrolled-bottom"}>
          <%= case @pictures do %>
            <% %Page{results: pictures} -> %>
              <Picture.grid pictures={pictures} filter_selected={@filter_selected} />
            <% _ -> %>
          <% end %>
        </div>
      </Dropzone.render>
    </div>
  </Ui.loading>
  <FloatingPills.pills>
    <FloatingPills.pill visible={Enum.any?(@new_pictures)} text={gettext("%{count} new pictures processed", count: length(@new_pictures))} pill_class="bg-yellow-400" button_class="hover:bg-yellow-600">
      <:button phx_click="clear-new-pictures" icon={:cross} width="10" height="10"/>
    </FloatingPills.pill>
  </FloatingPills.pills>
  <%= case {@pictures, @modal} do %>
    <% {_, {_, _} = component} -> %> 
      <Modal.render component={component} />
    <% {%Page{has_next_page: has_next_page, results: %SelectableList{highlighted_index: highlighted_index} = results}, _} when is_integer(highlighted_index) -> %>
      <.live_component module={Picture.Viewer} id={@picture_viewer_id} results={results} has_next_page={has_next_page} />
    <% _ -> %>
  <% end %>
</div>
